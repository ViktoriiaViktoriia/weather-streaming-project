name: Run Python Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      RAW_DIR: ${{ secrets.RAW_DIR }}
      PROCESSED_DIR: ${{ secrets.PROCESSED_DIR }}
      OPENWEATHER_BASE_URL: ${{ secrets.OPENWEATHER_BASE_URL }}
      OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
      KAFKA_BROKER: ${{ secrets.KAFKA_BROKER }}
      KAFKA_TOPIC: ${{ secrets.KAFKA_TOPIC }}
      KAFKA_TOPIC_FORECAST: ${{ secrets.KAFKA_TOPIC_FORECAST }}
      GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
      STORAGE_MAX_USAGE_GB: ${{ secrets.STORAGE_MAX_USAGE_GB }}
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Google Application Credentials
      run: |
        echo "${GOOGLE_APPLICATION_CREDENTIALS}" > $HOME/gcloud_key.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud_key.json" >> $GITHUB_ENV

    - name: Wait for PostgreSQL to be ready
      run: sleep 10

    - name: Run tests
      run: |
        pytest tests/
